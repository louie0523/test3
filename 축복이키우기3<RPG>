


#include <cstdlib>
#include <ctime>
#include <stdio.h>
#include <iostream>
#include <string.h>

using namespace std;

int main() {
    printf("<축복이 키우기 3>\n");
    printf("본 프로그램은 가상의 인물 어쩌구 저쩌구\n");
    int atk, Lv, exp, max_e, gold, ch, m_ch, nml, speed, m_atk, ch3, ch2, ch4, ch5;
    float m_health,m_mhealth,health,max_h, cri, cri_atk;
    max_h = 100;
    health = 100;
    atk = 25;
    Lv = 1;
    exp = 0;
    max_e = 100;
    gold = 100000;
    m_ch = 0;
    nml = 1; // Need Monster Lv
    speed = 0;
    cri = 0.1;
    cri_atk = 0.75;
    int atk_ban = 0;
    ////////////////////
	int item_have[100];
    
    const char* item_name[] = {"박망고","김미진", "박상도", "박상도의 플레이스테이션", "어머니의 손길","민철이의 가발",
								"낡은 철검", "인종차별 금지 포스터"};
    const char* item_ep[] = {"박망고의 보신탕을 먹어 최대 체력이 300 증가합니다.",
							"미진이의 춤을 보고 감명 받아 회피율이 10% 증가합니다.",
							"상도덕을 지켜 레벨이 낮은 적에게 입히는 피해가 50% 증가합니다.",
							"상도의 게임기를 활용하여 20%확률로 적의 공격을 반사합니다.",
							"따뜻합니다.",
							"스킬 '탈모빔'의 위력이 250% 증가합니다.",
							"그리 좋아 보이진 않는 철검이다.",
							"적이 자신을 공격시 10의 피해로 반사합니다."};
	int i_hp_up[] = {300, 0, 0, 0, 60, 0, 100,0};
	int i_atk_up[] = {0, 0, 0, 0, 10, 0, 15, 0};
	int i_speed[] = {0, 10, 0, 0, 3, 0, 0, 0};
	int i_cri[] =   {0, 0, 0, 0, 0, 0, 0, 0};
	int i_cri_atk[] = {0, 0, 0, 0, 0, 0, 0, 0};
	int i_atk_ban[] = {0, 0, 0, 20, 0, 0, 0, 0};
    const char* monster_name[] = {"슬라임","고블린", "오크", "와이번", "드래곤"};
    int mmax_h[] = {100, 400, 1000, 2500, 10000};
    int m_matk[] = {5, 15, 25, 45, 80};
    int skill[] = {1, 3, 0, 0};
    const char* skill_name[] = {"없음", "베기", "급소찌르기", "명상", "화염마법", "전기마법", "흡혈사슬", "지진파", "하이드로펌프"};
    const char* skill_ep[] = {"스킬이 없습니다.", "적을 베어 공격력의 150%만큼의 피해를 입힌다.",
                         "적의 급소를 찔러 공격력의 160%만큼의 피해를 입힌다. 30%확률로 3배의 피해를 입힌다.", "체력을 30% + 공격력의 100%만큼회복한다.",
                         "적에게 화염마법을 가하여 공격력의 220%만큼 피해를 입히고, 공격력을 20%감소시킨다.",
                         "적에게 전기마법을 가하여 공격력의 240%만큼 피해를 입히고, 최대 체력을 15%감소시킨다.",
                         "적에게 체력을 흡수하는 공격을 사용하여 공격력의 200%만큼 피해를 입히고, 입힌 피해량의 50%를 회복한다.",
                         "적에게 지진을 일으키는 마법을 사용하여 공격력의 270%만큼 피해를 입히고, 30%확률로 대상의 턴을 스킵한다.",
                         "적에게 강력한 물줄기를 발사하여 공격력의 300%만큼 피해를 입힌다."};
    // 0 노말 , 1 불 , 2 전기 , 3 물 , 4 땅
    // 상성표
    // 공격 | 불 | 전기 | 물 | 땅 | ("배"단위로 계산함.)
    // 불 | 1 | 1 | 1 | 2 |
    // 전기 | 1 | 1 | 2 | 1 |
    // 물 | 2 | 1 | 1 | 1 |
    // 땅 | 1 | 2 | 1 | 1 |
    int skill_type[] = {0, 0, 0, 1, 2, 0};
    float skill_atk[] = {0, 1.5f, 1.6f, 0, 2.2f, 2.4f, 2.0f, 2.7f, 3.0f};
    while (1) {
        printf("무엇을 할까?\n");
        printf("1.길을 걷는다 2.스테이터스 확인 3.스킬 확인 4.아이템 장착 목록\n");
        scanf("%d", &ch);
        if (ch == 1) {
        	std::srand(static_cast<unsigned int>(std::time(NULL)));
   			int ran = std::rand() % 3 + 1;
   			if(ran == 1) {
   				if(nml >= 10){
        			m_ch++;
        			nml = 0;
				}
				printf("길을 걷다가 야생의 %s(이)가 등장했다.\n",monster_name[m_ch]);
				m_mhealth = mmax_h[m_ch] + (Lv * 30);
				m_health = m_mhealth;
				m_atk = m_matk[m_ch] + (Lv * 5);
				while(1) {
					printf("______________________________________\n");
					printf("<%s>\n",monster_name[m_ch]);
					printf("%s의 최대체력 : 체력 - %f : %f\n",monster_name[m_ch], m_mhealth, m_health);
					printf("%s의 공격력 - %d\n",monster_name[m_ch],m_atk);
					printf("<축복이의 상태>\n");
           			printf("LV : %d\n", Lv);
           			printf("필요 EXP : %d - %d\n", max_e, exp);
            		printf("최대체력 : %2f - %2f\n", max_h, health);
            		printf("공격력 : %d\n", atk);
            		if(health >= ((int)max_h / 2)) {
            			printf("상태 : 전의를 다지고 있다.\n");
					} else {
						printf("상태 : 각오를 하고 있다.\n");
					}
					printf("______________________________________\n");
					printf("무엇을 해야할까?\n");
					printf("1.공격 2.스킬사용 3.상황 체크 4.도망친다. \n");
					scanf("%d", &ch2);
					printf("______________________________________\n");
					if(ch2 == 1) {
						printf("이얍!\n");
						printf("적에게 %d의 피해를 입혔다.\n", atk);
						m_health -= atk;
					} else if(ch2 == 2) {
						printf("무슨 스킬을 사용할까?\n");
						printf("1. <%s> 2. <%s> 3. <%s> 4. <%s>",skill_name[skill[0]],skill_name[skill[1]],skill_name[skill[2]],skill_name[skill[3]]);
						scanf("%d", &ch3);
						if(skill[ch3-1] == 0) {
							printf("이런! 헛짓을 해버렸다!\n");
						}
						if(skill_atk[skill[ch3-1]] > 0) {
						m_health -= skill_atk[skill[ch3-1]] * atk;
						printf("%s(으)로%f의 피해를 입혔다!\n",skill_name[skill[ch3-1]], skill_atk[skill[ch3-1]] * atk);
						}
						if(skill[ch3-1] == 3) {
							health += (health * 0.3) + (1 * atk);
							printf("명상(으)로 체력을 %f 회복했다.!\n",(health * 0.3) + (1 * atk));
						}
						if(health > max_h) {
							health = max_h;
						}					
					} else if(ch2 == 3) {
						printf("남는 선택지");
					} else if(ch2 == 4) {
						printf("축복이(은)는 야비하게 도망쳤다. . .\n");
						break;
					}
					if(m_health <= 0) {
						printf("%s(을)를 쓰러트렸다!\n",monster_name[m_ch]);
						printf("EXP + %d , Gold + %d\n", (m_ch + 1) * (Lv * 30) + 70, (m_ch + 1) * 500);
						exp +=  (m_ch + 1) * (Lv * 20) + 50;
						gold += (m_ch + 1) * 500;
						while(exp >= max_e) {
							exp -= max_e;
							max_e += 15;
							Lv++;
							max_h += 25;
							health = max_h;
							atk += 10;
							printf("Level up!\n");
						}
						break;
					}
					printf("______________________________________\n");
					printf("%s의 공격!\n",monster_name[m_ch]);
					printf("%s의 공격으로 %d의 피해를 받았다.\n",monster_name[m_ch],m_atk);
					health -= m_atk;
					if(health < 0) {
						printf("축복이 : 끄으윽...\n");
						printf("축복이가 쓰러졌다..\n");
						printf("전투 불가, 선택 화면으로 돌아갑니다.\n");
						printf("경험치가 30% 줄어들고, 소지 골드의 30%를 잃습니다.");
						exp = (int)exp * 0.3;
						gold = (int)gold * 0.3;
						health += max_h / 2;
						break;
					}
				} 
			} else if(ran == 2) {
				printf("길을 걷다가, 아이템 상점이 나왔다.\n");
				printf("상점에서 무엇을 할까?\n");
				printf("1.아이템 구매 2.나간다");
				scanf("%d", &ch4);
				if(ch4 == 1) {
					std::srand(static_cast<unsigned int>(std::time(NULL)));
					int item_n[5];
   					item_n[0] = std::rand() % 8;
   					item_n[1] = std::rand() % 8;
   					item_n[2] = std::rand() % 8;
   					item_n[3] = std::rand() % 8;
   					item_n[4] = std::rand() % 8;
   					int gold_n[5];
   					gold_n[0] = std::rand() % 3000 + 1000;
   					gold_n[1] = std::rand() % 3000 + 1000;
   					gold_n[2] = std::rand() % 3000 + 1000;
   					gold_n[3] = std::rand() % 3000 + 1000;
   					gold_n[4] = std::rand() % 3000 + 1000;
					while(1) {
						printf("1.%s(%dG)\n", item_name[item_n[0]], gold_n[0]);
						printf("2.%s(%dG)\n", item_name[item_n[1]], gold_n[1]);
						printf("3.%s(%dG)\n", item_name[item_n[2]], gold_n[2]);
						printf("4.%s(%dG)\n", item_name[item_n[3]], gold_n[3]);
						printf("5.%s(%dG)\n", item_name[item_n[4]], gold_n[4]);
						printf("아이템 자세히 확인 : 1~5 입력 , 나가기 : 6 입력");
						scanf("%d", &ch4);
						ch4--;
						if(ch4 <= 4) {
							printf("아이템 : %s\n",item_name[item_n[ch4]]);
							printf("설명 : %s\n",item_ep[item_n[ch4]]);
							if(i_hp_up[item_n[ch4]] > 0) {
								printf("체력 증가량 : %d\n", i_hp_up[item_n[ch4]]);
							}
							if( i_atk_up[item_n[ch4]] > 0) {
								printf("공격력 증가량 : %d\n", i_atk_up[item_n[ch4]]);
							}
							if(i_cri[item_n[ch4]] > 0) {
								printf("치명타 확률  증가량 : %d\n", i_cri[item_n[ch4]]);
							}
							if( i_cri_atk[item_n[ch4]] > 0) {
								printf("치명타 피해량 증가량 : %d\n", i_cri_atk[item_n[ch4]]);
							}
							if(i_speed[item_n[ch4]] > 0) {
								printf("회피율 증가량 : %d\n", i_speed[item_n[ch4]]);
							}
							if(i_atk_ban[item_n[ch4]] > 0) {
								printf("피해 반사 확률  증가량 : %d\n", i_atk_ban[item_n[ch4]]);
							}
							printf("가격 : %d\n", gold_n[ch4]);
							printf("소지 골드 : %dG\n", gold);
							printf("1.구매 2.다른 아이템을 본다.");
							scanf("%d", &ch5);
							if(ch5 == 1) {
								if(gold >= gold_n[ch4]) {
									if(item_have[item_n[ch4]] != 1) {
										printf("%s(을)를 구매하였다!\n",item_name[item_n[ch4]]);
										item_have[item_n[ch4]] = 1;
										gold -= gold_n[ch4];
										health += i_hp_up[ch4];
										atk += i_atk_up[ch4];
										cri += i_cri[ch4];
										cri_atk += i_cri_atk[ch4];
										atk_ban += i_atk_ban[ch4];
										printf("아이템을 구매하였으므로, 상점을 나갑니다..\n");
										break;										
									} else {
										printf("이미 해당 아이템을 가지고 있습니다.\n");
									}
								}
							}
						} else {
							printf("상점을 나갑니다...\n");
							break;
						}
					}
				}
			}
        } else if (ch == 2) {
            printf("<축복이의 능력치>\n");
            printf("LV : %d\n", Lv);
            printf("필요 EXP : %d - %d\n", max_e, exp);
            printf("최대체력 : %1f - %1f\n", max_h, health);
            printf("공격력 : %d\n", atk);
            printf("소지 골드 : %dG\n", gold);
        } else if (ch == 3) {
            printf("<축복이의 스킬>\n");
            printf("1. <%s> \n", skill_name[skill[0]]);
            printf("1 - 설명 : %s\n", skill_ep[skill[0]]);
            printf("2. <%s> \n", skill_name[skill[1]]);
            printf("2 - 설명 : %s\n", skill_ep[skill[1]]);
            printf("3. <%s> \n", skill_name[skill[2]]);
            printf("3 - 설명 : %s\n", skill_ep[skill[2]]);
            printf("4. <%s> \n", skill_name[skill[3]]);
            printf("4 - 설명 : %s\n", skill_ep[skill[3]]);
        } else if (ch == 4) {
            printf("<축복이의 가방>\n");
			int item_see = 0;
			while(item_see < 20) {
				item_see++;
				if(item_have[item_see] == 1) {
					printf("No.%d - %s\n", item_see, item_name[item_see]);
				}
			}
        }
    }
    return 0;
}
